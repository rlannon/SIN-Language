ERROR_CODES.TXT

An overview of the various error codes in the lexer, parser, and interpreter.

PARSER:
	The parser will throw an error with the appropriate error code and subsequently quit parsing if it encounters an error. As a result, the error you get may not be the only one, and will only be the first one encountered. This is to avoid other errors that could arise from continuing to parse invalid tokens.
	The following codes are currently in use:

	1		-	No more tokens to parse. This will be thrown by the parser in its peek() and next() functions if they try to read past the end of the file.

	200s	-	Used when something of one type cannot be converted to another, or its analog cannot be found.
		211	-	Thrown when attempting to convert 'string type' to 'Type type'; if the type specified in the string is not a valid type, an error is thrown.

	300s	-	Token Error
		301	-	A token of type "KWD" must follow a token with a value of "alloc"
		303	-	Punctuation in assignment statement was not "="

		320	-	Invalid character; the type of character used is not appropriate here
		321	-	Invalid character following a literal; the only characters that may follow a literal in an expression are a semicolon or an op_char, such as + or -
		322	-	Invalid character in assignment
		325	-	Invalid character in expression

		350	-	Invalid token type

		360	-	Unknown token type
		361	-	Unknown unary operator
		362	-	Unknown binary operator

	400s	-	Invalid statement syntax
		410	-	Unexpected punctuation token; abrupt end to statement where more arguments or expressions were expected
		430	-	Invalid operand type in expression; the type of token must be a literal or a var (LValue), and any other tokens are invalid.
		460	-	Unexpected token type

	500s	-	File or stream errors
		501	-	End of file reached unexpectedly

